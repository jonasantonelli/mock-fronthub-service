{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/numeral/numeral.js","webpack://[name]/./src/numeral.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","numeral","_","decimal","binary","unformatRegex","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","neg","Math","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","register","type","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","concat","filter","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray"],"mappings":"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","file":"numeral@2.0.6.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","export { default } from 'numeral';\nexport * from 'numeral';\n"],"sourceRoot":""}