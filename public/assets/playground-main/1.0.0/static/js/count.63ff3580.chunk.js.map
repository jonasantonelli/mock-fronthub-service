{"version":3,"sources":["../node_modules/@resultadosdigitais/tangram-components/esm/ButtonGroup/ButtonGroup.js","components/Count.js"],"names":["Root","styled","div","withConfig","displayName","componentId","ButtonGroup","forwardRef","_ref","ref","children","rest","_objectWithoutPropertiesLoose","buttons","React","Children","toArray","map","child","index","state","tabIndex","className","concat","props","cloneElement","_extends","key","createElement","role","CounterText","Text","Count","count","setCount","useState","useEffect","timeoutId","i","setTimeout","prev","clearInterval","id","delay","onLog","log","console","token","tokens","TEXT_SM_BOLD","Button","onClick"],"mappings":"8OAKA,MAAMA,EAAOC,IAAOC,IAAIC,WAAW,CACjCC,YAAa,oBACbC,YAAa,gBAFFJ,CAGV,CAAC,oGACEK,EAA2BC,qBAAW,CAACC,EAAMC,KACjD,IAAI,SACFC,GACEF,EACAG,EAAOC,YAA8BJ,EAAM,CAAC,aAEhD,MACMK,EADgBC,IAAMC,SAASC,QAAQN,GACfO,IAAI,CAACC,EAAOC,KACxC,MAAMC,EAAQ,CACZD,QACAE,SAAU,EACVC,UAAW,GAAGC,OAAOL,EAAMM,MAAMF,UAAW,yBAE9C,OAAoBR,IAAMW,aAAaP,EAAOQ,YAAS,GAAIR,EAAMM,MAAOJ,EAAO,CAC7EO,IAAKT,EAAMS,KAAOR,OAGtB,OAAoBL,IAAMc,cAAc5B,EAAM0B,YAAS,CACrDjB,IAAKA,EACLoB,KAAM,SACLlB,GAAOE,KAEZP,EAAYF,YAAc,cAOXE,Q,4QC7Bf,MAAMwB,EAAc7B,IAAO8B,IAAP9B,CAAH,mBAIXD,EAAOC,IAAOC,IAAV,oBAiCK8B,UA7BD,KACZ,MAAOC,EAAOC,GAAYpB,IAAMqB,SAAS,GAazC,OAXArB,IAAMsB,UAAU,KACd,IAAIC,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAMA,IACxBD,EAAYE,WAAW,IAAML,EAASM,GAAQA,EAAO,GAAI,GAG3D,MAAO,KACLC,cAAcJ,KAEf,IAGD,kBAAC,WAAD,CAAUK,GAAG,QAAQC,MAAO,KAAMC,MAAOC,GAAOC,QAAQD,IAAIA,IAC1D,kBAAC,EAAD,KACE,kBAACf,EAAD,CAAaiB,MAAOhB,IAAKiB,OAAOC,cAAhC,UACUhB,GAEV,kBAAC,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAQC,QAAS,IAAMjB,EAASD,GAASA,EAAQ,IAAjD,KACA,kBAACiB,EAAA,EAAD,CAAQC,QAAS,IAAMjB,EAASD,GAASA,EAAQ,IAAjD","file":"static/js/count.63ff3580.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst Root = styled.div.withConfig({\n  displayName: \"ButtonGroup__Root\",\n  componentId: \"sc-1iginm8-0\"\n})([\"display:inline-flex;.button-group__child:not(:first-child){margin-left:var(--size-spacing-03);}\"]);\nconst ButtonGroup = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  const childrenArray = React.Children.toArray(children);\n  const buttons = childrenArray.map((child, index) => {\n    const state = {\n      index,\n      tabIndex: 0,\n      className: \"\".concat(child.props.className, \" button-group__child\")\n    };\n    return /*#__PURE__*/React.cloneElement(child, _extends({}, child.props, state, {\n      key: child.key || index\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Root, _extends({\n    ref: ref,\n    role: \"group\"\n  }, rest), buttons);\n});\nButtonGroup.displayName = 'ButtonGroup';\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  /**\n   * Should be two or more of `<Button />`, `<IconButton />` or `<LinkButton />`\n   */\n  children: PropTypes.node.isRequired\n} : void 0;\nexport default ButtonGroup;","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  ButtonGroup,\n  Button,\n} from '@resultadosdigitais/tangram-components'\nimport { Profiler } from '@resultadosdigitais/front-hub/react'\n\nconst CounterText = styled(Text)`\n  color: var(--color-white);\n`\n\nconst Root = styled.div`\n  margin: 20px 0;\n`\n\nconst Count = () => {\n  const [count, setCount] = React.useState(0)\n\n  React.useEffect(() => {\n    let timeoutId\n    for (let i = 0; i < 2000; i++) {\n      timeoutId = setTimeout(() => setCount(prev => prev + 1), 1)\n    }\n\n    return () => {\n      clearInterval(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Profiler id=\"count\" delay={1500} onLog={log => console.log(log)}>\n      <Root>\n        <CounterText token={Text.tokens.TEXT_SM_BOLD}>\n          Count: {count}\n        </CounterText>\n        <ButtonGroup>\n          <Button onClick={() => setCount(count => count + 1)}>+</Button>\n          <Button onClick={() => setCount(count => count - 1)}>-</Button>\n        </ButtonGroup>\n      </Root>\n    </Profiler>\n  )\n}\n\nexport default Count\n"],"sourceRoot":""}